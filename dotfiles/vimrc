set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
" https://realpython.com/vim-and-python-a-match-made-in-heaven
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'tmhedberg/simpylfold'
Plugin 'vim-scripts/indentpython.vim'

" add all your plugins here (note older versions of Vundle
" used Bundle instead of Plugin)

" ...

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

set encoding=utf-8

set tabstop=4       " Number of spaces that a <Tab> in the file counts for.
 
set shiftwidth=4    " Number of spaces to use for each step of (auto)indent.
 
set expandtab       " Use the appropriate number of spaces to insert a <Tab>.
                    " Spaces are used in indents with the '>' and '<' commands
                    " and when 'autoindent' is on. To insert a real tab when
                    " 'expandtab' is on, use CTRL-V <Tab>.
 
set smarttab        " When on, a <Tab> in front of a line inserts blanks
                    " according to 'shiftwidth'. 'tabstop' is used in other
                    " places. A <BS> will delete a 'shiftwidth' worth of space
                    " at the start of the line.

set number          " Show line numbers.

set showmatch       " When a bracket is inserted, briefly jump to the matching
                    " one. The jump is only done if the match can be seen on the
                    " screen. The time to show the match can be set with
                    " 'matchtime'.
set hlsearch        " When there is a previous search pattern, highlight all
                    " its matches.
 
set incsearch       " While typing a search command, show immediately where the
                    " so far typed pattern matches.
 
set ignorecase      " Ignore case in search patterns.
 
set smartcase       " Override the 'ignorecase' option if the search pattern
                    " contains upper case characters.

set autoindent      " Copy indent from current line when starting a new line
                    " (typing <CR> in Insert mode or when using the "o" or "O"
                    " command).
set copyindent      " copy the previous indentation on autoindenting
set smartindent

set showcmd         " shows the last command entered in the very bottom right of Vim.

set wildmenu        " visual autocomplete for command menu

set lazyredraw      " redraw only when we need to.

let mapleader=","
" set tabstop=4 shiftwidth=4 expandtab smarttab number showmatch hlsearch incsearch ignorecase smartcase autoindent copyindent smartindent pastetoggle=<F2> foldmethod=indent | colorscheme desert

set backspace=indent,eol,start  " allow backspacing over everything in insert mode
" set mouse=a         " Enable the use of the mouse.
" set paste
set diffopt+=iwhite
filetype plugin indent on
set shell=/bin/bash

Plugin 'vim-syntastic/syntastic'
Plugin 'nvie/vim-flake8'
let python_highlight_all=1
syntax on

color desert
" color badwolf
set cursorline
hi CursorLine cterm=NONE ctermbg=Green ctermfg=black
hi Search cterm=NONE ctermfg=red ctermbg=blue
" Change color when insert mode activated
autocmd InsertEnter * highlight CursorLine ctermbg=Red ctermfg=White
autocmd InsertLeave * highlight CursorLine ctermbg=Green ctermfg=black

"au Filetype python set foldmethod=indent

set laststatus=2
set statusline=
set statusline+=%#PmenuSel#
set statusline+=%#LineNr#
set statusline+=\ %f
set statusline+=%m\
set statusline+=%=
set statusline+=%#CursorColumn#
set statusline+=\ %y
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\[%{&fileformat}\]
set statusline+=\ %p%%
set statusline+=\ %l:%c
set statusline+=\ 

"" diff buffer and original file
map <F2> :w !diff % - <cr>

let mapleader = ","
"" nerdtree
set runtimepath^=~/.vim/bundle/nerdtree
nmap <leader>ne :NERDTree<cr>

"" undotree
set runtimepath^=~/.vim/bundle/undotree
nmap <leader>u :UndotreeToggle<cr>

set splitbelow
set splitright

" Enable folding
set foldmethod=indent
set foldlevel=99

" Enable folding with the spacebar
nnoremap <space> za

let g:SimpylFold_docstring_preview=1

" au BufNewFile,BufRead *.py set tabstop=4 set softtabstop=4 set shiftwidth=4 set textwidth=79 set expandtab set autoindent set fileformat=unix

" FIX of plugin below -> https://github.com/ycm-core/YouCompleteMe/issues/914
Bundle 'Valloric/YouCompleteMe'

let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

""python with virtualenv support
"py << EOF
"import os
"import sys
"if 'VIRTUAL_ENV' in os.environ:
"  project_base_dir = os.environ['VIRTUAL_ENV']
"  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
"  execfile(activate_this, dict(__file__=activate_this))
"EOF
